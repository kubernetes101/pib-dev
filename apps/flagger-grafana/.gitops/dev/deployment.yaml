apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{gitops.app}}
  namespace: {{gitops.namespace}}
  labels:
    app: {{gitops.app}}
    namespace: {{gitops.namespace}}
    chart: 1.7.0
    release: flagger-grafana
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{gitops.app}}
      release: flagger-grafana
  template:
    metadata:
      labels:
        app: {{gitops.app}}
        release: flagger-grafana
      annotations:
        prometheus.io/scrape: 'false'
    spec:
      containers:
        - name: grafana
          namespace: {{gitops.namespace}}
          image: grafana/grafana:7.3.4
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          env:
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning/
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: change-me
          - name: GF_SERVER_SERVE_FROM_SUB_PATH
            value: 'true'
          - name: GF_SERVER_ROOT_URL
            value: 'http://localhost:3000{{gitops.ingressPrefix}}'
          volumeMounts:
          - name: grafana
            mountPath: /var/lib/grafana
          - name: dashboards
            mountPath: /etc/grafana/dashboards
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources
          - name: providers
            mountPath: /etc/grafana/provisioning/dashboards
          resources:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: grafana
        emptyDir: {}
      - name: dashboards
        configMap:
          name: {{gitops.app}}-dashboards
      - name: providers
        configMap:
          name: {{gitops.app}}-providers
      - name: datasources
        configMap:
          name: {{gitops.app}}-datasources
