apiVersion: v1
kind: ServiceAccount
metadata:
  name: flagger-prometheus
  namespace: flagger-system
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flagger-prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - services
      - endpoints
      - pods
      - nodes/proxy
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["get"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flagger-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flagger-prometheus
subjects:
- kind: ServiceAccount
  name: flagger-prometheus
  namespace: flagger-system
---

apiVersion: v1
kind: Service
metadata:
  name: flagger-prometheus
  namespace: flagger-system
spec:
  selector:
    app: flagger-prometheus
  ports:
    - name: http
      protocol: TCP
      port: 9090
      targetPort: 9090
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flagger-prometheus
  namespace: flagger-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flagger-prometheus
  template:
    metadata:
      labels:
        app: flagger-prometheus
      annotations:
        appmesh.k8s.aws/sidecarInjectorWebhook: disabled
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: flagger-prometheus
      containers:
          - name: prometheus
            image: prom/prometheus:v2.34.0
            imagePullPolicy: IfNotPresent
            args:
              - '--storage.tsdb.retention=2h'
              - '--config.file=/etc/prometheus/prometheus.yml'
            ports:
              - containerPort: 9090
                name: http
            livenessProbe:
              httpGet:
                path: /-/healthy
                port: 9090
            readinessProbe:
              httpGet:
                path: /-/ready
                port: 9090
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
            volumeMounts:
              - name: config-volume
                mountPath: /etc/prometheus
              - name: data-volume
                mountPath: /prometheus/data
      volumes:
        - name: config-volume
          configMap:
            name: flagger-prometheus
        - name: data-volume
          emptyDir: {}
